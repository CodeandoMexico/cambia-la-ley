<!DOCTYPE html>
<html>
  <head>
    <title>Explica.la/ley</title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    
    <!--  
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage 
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/linker/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.
        
        To customize any part of the built-in behavior, just edit your Gruntfile.
        For example, here are a few things you could do:
            
            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css">
    <!--STYLES-->
    <link rel="stylesheet" href="/styles/application.css">
    <link rel="stylesheet" href="/styles/importer.css">
    <link rel="stylesheet" href="/styles/vendor/annotator.min.css">
    <!--STYLES END-->
  </head>

  <body>
    <div id="wrapper">
      <div id="sidebar-wrapper">
        <h2 class="sidebar-brand"><a href="#">Explica.la</a></h2>
        <h3 class="law-title">Ley Telecom</h3>
        <form action="#" method="GET" class="search form-inline" role="form">
          <div class="input-group">
            <input type="text" class="form-control" placeholder="Buscar artículo" />
            <span class="input-group-btn">
              <button type="submit" class="btn btn-default">
                <span class="glyphicon glyphicon-search"></span>
              </button>
            </span>
          </div>
        </form>
        <ul class="sidebar-nav">
          <li><a href="#">Art&iacute;culo 1</a></li>
        </ul>
        <div class="share">
          <h4>Comparte</h4>
          <a href="https://twitter.com/share" class="twitter-share-button" data-text="Entiende los puntos más importantes de la #LeyTelecom. Hoy se está discutiendo en el Senado." data-via="CodeandoMexico" data-size="large" data-count="none">Tweet</a>
          <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
        </div>
        <div class="contribute">
          <a href="mailto:equipo@codeandomexico.org">equipo@codeandomexico.org</a>
        </div>
        <div class="attribution">
          <a href="http://codeandomexico.org" target="_blank">
            <img src="/images/cmx-logo-white.png"/>
          </a>
        </div>
      </div>
      <div id="page-content-wrapper">
        <div class="page-content">
          <div class="container">
            <div class="row">
              <div class="col-md-11">
                <!-- content of page -->
                <%- body %>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/linker/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).
        
        To customize this behavior to fit your needs, just edit your Gruntfile.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can 
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, filesin your `assets/linker/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.
      
      To customize any part of the built-in behavior, just edit your Gruntfile.
      For example, here are a few things you could do:
          
          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <script src="http://code.jquery.com/jquery-1.11.0.min.js">
    <!--SCRIPTS-->
    <script src="/js/dependencies/sails.io.js"></script>
    <script src="/js/article-annotator.js"></script>
    <script src="/js/vendor/annotator-full.min.js"></script>
    <!--SCRIPTS END-->
  </body>
</html>
